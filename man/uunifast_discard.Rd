% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uunifast.R
\name{uunifast_discard}
\alias{uunifast_discard}
\title{UUniFast-Discard sampling}
\usage{
uunifast_discard(n, U = 1, maxiter = 1000)
}
\arguments{
\item{n}{Integer, number of values in the sample.}

\item{U}{Numeric, sum of the sample. The default is 1.}

\item{maxiter}{Integer, number of attempts to make before breaking. The
default is 1000.}
}
\description{
UUniFast-Discard sampling produces n values that sum to U, with each value on
[0,1]. This is an extension of the UUniFast algorithm for cases where
individual values in each sample cannot exceed 1; this is achieved by
discarding UUniFast samples where any value > 1. Because it uses rejection
sampling, it is increasingly slow as \eqn{U \rightarrow n}.
}
\details{
The algorithm was originally proposed in:

R. I. Davis and A. Burns. Improved priority assignment for global fixed
priority pre-emptive scheduling in multiprocessor real-time systems.
Real-Time Systems, 47:1â€“40, 2010.

R code is a natural extension of the adapted UUniFast code.
}
